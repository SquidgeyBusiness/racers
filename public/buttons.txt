if(manipulatorEnd){
          checkOverlap();
        }else{}

            function handleKeyDown(event) {
                if (lastSelectedObject) {
                    const index = lastSelectedObject.dataset.index;
                    const sizeSlider = document.getElementById('sizeSlider');
                    const rotateSlider = document.getElementById('rotationSlider');
                    const imageUrl = lastSelectedObject.firstElementChild.currentSrc;
                    let currZindex = movableObjects[index].style.zIndex;
                    //this works (A)
                    let currRotate = movableObjects[index].firstElementChild.style.rotate.replace('deg','');
                    //let currRotate = lastSelectedObject.dataset.rotate.replace("deg", "");
                    let currOpacity = movableObjects[index].style.opacity;
                    currRotate = Number(currRotate);
                    currOpacity = Number(currOpacity);
                    currZindex = Number(currZindex);
                    get_url_extension(imageUrl);
                    if(picTypes.includes(duhfileIs)){
                      currSize = movableObjects[index].firstElementChild.clientWidth;
                    }
                    else if(vidTypes.includes(duhfileIs)){
                      getVidSize = movableObjects[index].firstElementChild.width;
                      //currSize = getVidSize.match(/\width=".+?px"/g);
                      currSize = Number(getVidSize);
                    }


                    //videos

                    //let rotateSlider = parseInt(rotateSlider.value);
                    if(logskeys){

                    }
                    //console.log(event.key);
                    switch (event.key) {
                        case 'ArrowUp':
                            newSize = currSize+5;
                            dosize = true;
                            break;
                        case 'ArrowDown':
                            newSize = currSize-5;
                            dosize = true;
                            break;
                        case 'ArrowLeft':
                            newRotate = currRotate-5;
                            dorotate = true;
                            break;
                        case 'ArrowRight':
                            newRotate = currRotate+5;
                            dorotate = true;
                            break;
                        case '.':
                            //console.log(".");
                            newOpacity = currOpacity;
                            doopacityup = true;
                            break;
                        case ',':
                            //console.log(",");
                            newOpacity = currOpacity;
                            doopacitydown = true;
                            break;
                        case '/':
                            console.log("/");
                            doflip = true;
                            break;
                        case 'PageUp':
                            //console.log("KEYED PageUp");
                            newZindex = currZindex+1;
                            dozindex = true;
                            break;
                        case 'PageDown':
                            //console.log("KEYED PageDown");
                            newZindex = currZindex-1;
                            dozindex = true;
                            break;
                    }

                    if(logskeys){
                      console.log("currZindex: "+currZindex);
                      console.log("newZindex: "+newZindex);
                    }
                    if(dosize){
                      resizeObject(index, newSize, true);
                      dosize = false;
                    }
                    if(dorotate){
                      setRotation(index, newRotate, true);
                      dorotate = false;
                    }
                    if(doopacityup){
                      increaseOpacityObject(index, newOpacity, "up");
                      doopacityup = false;
                    }
                    if(doopacitydown){
                      decreaseOpacityObject(index, newOpacity, "down");
                      doopacitydown = false;
                    }
                    if(doflip){
                      flipObject();
                      doflip = false;
                    }
                    if(dozindex){
                      if(newZindex <= 1){newZindex = 2;}
                      console.log("dozindex");
                      setzindexNOW(index, newZindex);
                      dozindex = false;
                    }

                }
            }
            document.addEventListener('keydown', handleKeyDown);



            if(logs){
              socket.on('log', (message) => {
                console.log(message);
              });
            }